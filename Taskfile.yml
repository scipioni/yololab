# https://taskfile.dev

version: '3'

vars:
  GREETING: Hello, World!

tasks:
  default:
    cmds:
      - go-task -l
    silent: true

  venv:
    cmds:
      - python -mvenv .venv --system-site-packages
      - .venv/bin/pip install --upgrade pip
      - .venv/bin/pip install -e yololab
      - .venv/bin/yolo settings
      - echo "export YOLO_CONFIG_DIR=~/.config/Ultralytics/" >> .venv/bin/activate
      - echo "set -gx YOLO_CONFIG_DIR ~/.config/Ultralytics/" >> .venv/bin/activate
      # - .venv/bin/pip install nvidia-pyindex
      # - .venv/bin/pip install pytorch-quantization black

      #- task: download
    status:
      - test -f .venv/bin/yolo


  venv:test:
    silent: true
    cmds:
      - |
        python - <<EOF
        import cv2

        print("OpenCV version:", cv2.__version__)
        print("CUDA supported:", cv2.cuda.getCudaEnabledDeviceCount() > 0)
        EOF

  download:pothole:
    cmds:
      - |
        mkdir -p datasets
        cd datasets
        wget -O tmp.zip https://www.dropbox.com/s/qvglw8pqo16769f/pothole_dataset_v8.zip?dl=1 && unzip tmp.zip && rm tmp.zip
    status:
      - test -f datasets/pothole_dataset_v8/pothole.yaml

  download:fpds:
    cmds:
      - |
        cd datasets
        mkdir -p fpds
        cd fpds
        wget --content-disposition "https://universidaddealcala-my.sharepoint.com/:u:/g/personal/gram_uah_es/EXYxgnEftbtCp2iCgAaWDDQBcAuouxLrV_2kxBDalj3m4w?&Download=1"
        tar xvf test.tar* && rm test.tar*
        wget --content-disposition "https://universidaddealcala-my.sharepoint.com/:u:/g/personal/gram_uah_es/EXQImG_yi5xOifMZYz79_hcBlxATrYEZP5mCu-li4dcWDw?&Download=1"
        tar xvf train.tar* && rm train.tar*
        wget --content-disposition "https://universidaddealcala-my.sharepoint.com/:u:/g/personal/gram_uah_es/EULm_4e4bgBKqnsTxDB5Br4BKf9rApBjYi7T0QrWyJrppw??&Download=1"
        tar xvf valid.tar* && rm valid.tar* 
        cd ../..
        python yololab/yololab/utils/fpds.py datasets/fpds/
    status:
      - test -f datasets/fpds/test/split6/split6_002.txt


  test:predict:
    cmds:
      - yolo mode=predict model=models/yolov8n.pt source=0 show=True
      #- yolo predict model=models/yolov8n.pt source='https://ultralytics.com/images/bus.jpg'

  test:predict:youtube:
    cmds:
      - yolo predict model=models/yolov8n-seg.pt source='https://youtu.be/Zgi9g1ksQHc' imgsz=320 show=True

  # test:train:
  #   cmds:
  #     - |
  #       # https://docs.ultralytics.com/usage/cfg/
  #       yolo train data=coco8.yaml model=models/yolov8n.pt epochs=1 lr0=0.01 
  #     # - mkdir -p checkpoints
  #     # - rm -fR checkpoints/test1
  #     # - python yololab/yololab/experiments/train.py test1
  



  export:
    cmds:
      - yolo export model=models/yolov8n.pt imgsz=640 format=onnx opset=12
      #- python custom-nas-model-metadata.py -m checkpoints/test1/ckpt_best.pth -t yolo_nas_s -n 2 --export-onnx models/test1.onnx


  predict:
    cmds:
      - python yolo-nas-onnx/yolo-nas-py/detect.py -m models/test1.onnx -i samples/fp1.png --custom-metadata models/test1.json

  update:
    cmds:
      - pip install -e yololab


  test:deepsort:
    cmds:
      - python yololab/yololab/experiments/deepsort.py
  
  test:train:
    cmds:
      - |
        # https://docs.ultralytics.com/usage/cfg/
        export YOLO_CONFIG_DIR=~/.config/Ultralytics/
        yolo detect train project=models name=fpds data=datasets/fpds.yaml model=models/yolov8n.pt pretrained=true exist_ok=true imgsz=640 epochs=5 lr0=0.01
        yolo export model=models/fpds/weights/best.pt imgsz=640 format=onnx opset=12
    
  test:train:mini:
    cmds:
      - |
        # https://docs.ultralytics.com/usage/cfg/
        export YOLO_CONFIG_DIR=~/.config/Ultralytics/
        yolo detect train project=models name=fpds data=datasets/fpds-mini.yaml model=models/yolov8n.pt pretrained=true exist_ok=true imgsz=640 epochs=1 lr0=0.01
        yolo export model=models/fpds/weights/best.pt imgsz=640 format=onnx opset=12
    
  test:opencv:
    cmds:
      - python yololab/yololab/experiments/onxx.py --model models/fpds/weights/best.onnx --img samples/fp1.png


  test:onxx:
    cmds:
      - yolo export model=models/yolov8n.pt imgsz=640 format=onnx opset=12
      - python yololab/yololab/experiments/onxx.py --model models/yolov8n.onnx --img samples/dogs.webp


  opencv:
    cmds:
      - |
        cd build/opencv-python
        export CMAKE_ARGS="-DBUILD_opencv_world=ON -DWITH_CUDA=ON -DCUDA_FAST_MATH=ON -DWITH_CUBLAS=ON -DCUDA_ARCH_PTX=8.6 -DWITH_NVCUVID=ON"
        export ENABLE_CONTRIB=1
        export CC=gcc-11
        export CXX=g++-11
        pip wheel . --verbose
